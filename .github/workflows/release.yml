name: Create release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release: 
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.repository.updated_at }}
        commit: ${{ github.head_ref || github.ref_name }} 
        name: Release ${{ github.event.repository.updated_at }}
        draft: true
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  publish:
    needs: create-release
    runs-on: ubuntu-latest
    env:
      NESTILER_REPO: https://github.com/ClusterM/nestiler
      NESTILER_DIR: nestiler-source
      NESTILER_OUT: nestiler
      FDSPACKER_REPO: https://github.com/ClusterM/fdspacker
      FDSPACKER_DIR: fdspacker-source
      FDSPACKER_OUT: fdspacker
      NESASM_REPO: https://github.com/ClusterM/nesasm
      NESASM_DIR: nesasm-source
      NESASM_OUT: nesasm-source
      OUTPUT_FILE: duplifds.zip
    steps:
    - name: Checkout DupliFDS
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x      
    - name: Checkout NesTiler
      run: |
        git clone ${{ env.NESTILER_REPO }} ${{ env.NESTILER_DIR }}
        cd ${{ env.NESTILER_DIR }}
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $LATEST_TAG        
    - name: Build NesTiler
      run: dotnet publish ${{ env.NESTILER_DIR }}/NesTiler -c Release --no-self-contained -r linux-x64 -o ${{ env.NESTILER_OUT }}
    - name: Checkout FDSPacker
      run: |
        git clone ${{ env.FDSPACKER_REPO }} ${{ env.FDSPACKER_DIR }}
        cd ${{ env.FDSPACKER_DIR }}
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $LATEST_TAG        
    - name: Build FDSPacker
      run: dotnet publish ${{ env.FDSPACKER_DIR }}/FDSPacker -c Release --no-self-contained -r linux-x64 -o ${{ env.FDSPACKER_OUT }}
    - name: Checkout nesasm CE
      run: |
        git clone ${{ env.NESASM_REPO }} ${{ env.NESASM_DIR }}
        cd ${{ env.NESASM_DIR }}
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $LATEST_TAG        
    - name: Build nesasm CE
      run: make -C ${{ env.NESASM_DIR }}/source EXEDIR=..
    - name: Build DupliFDS
      run: |
        mkdir -p duplifds
        make TILER=./${{ env.NESTILER_OUT }}/nestiler FDSPACKER=./${{ env.FDSPACKER_OUT }}/fdspacker NESASM=./${{ env.NESASM_OUT }}/nesasm OUTPUT_IMAGE=./duplifds/duplifds.fds
        rm duplifds/*.nl
        cp LICENSE duplifds
        cp README.md duplifds
    - name: Archive
      run: zip -r9 ${{ env.OUTPUT_FILE }} duplifds
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v3
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo upload_url=$value >> $GITHUB_OUTPUT
    - name: Upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ${{ env.OUTPUT_FILE }}
        asset_name: ${{ env.OUTPUT_FILE }}
        asset_content_type: zip
