name: Build and upload

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NESTILER_REPO: https://github.com/ClusterM/nestiler
      NESTILER_DIR: nestiler-source
      NESTILER_OUT: nestiler
      FDSPACKER_REPO: https://github.com/ClusterM/fdspacker
      FDSPACKER_DIR: fdspacker-source
      FDSPACKER_OUT: fdspacker
      NESASM_REPO: https://github.com/ClusterM/nesasm
      NESASM_DIR: nesasm-source
      NESASM_OUT: nesasm-source
      OUTPUT_FILE: duplifds.zip
    steps:
    - name: Checkout DupliFDS
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x      
    - name: Checkout NesTiler
      run: |
        git clone ${{ env.NESTILER_REPO }} ${{ env.NESTILER_DIR }}
        cd ${{ env.NESTILER_DIR }}
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $LATEST_TAG        
    - name: Build NesTiler
      run: dotnet publish ${{ env.NESTILER_DIR }}/NesTiler -c Release --no-self-contained -r linux-x64 -o ${{ env.NESTILER_OUT }}
    - name: Checkout FDSPacker
      run: |
        git clone ${{ env.FDSPACKER_REPO }} ${{ env.FDSPACKER_DIR }}
        cd ${{ env.FDSPACKER_DIR }}
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $LATEST_TAG        
    - name: Build FDSPacker
      run: dotnet publish ${{ env.FDSPACKER_DIR }}/FDSPacker -c Release --no-self-contained -r linux-x64 -o ${{ env.FDSPACKER_OUT }}
    - name: Checkout nesasm CE
      run: |
        git clone ${{ env.NESASM_REPO }} ${{ env.NESASM_DIR }}
        cd ${{ env.NESASM_DIR }}
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $LATEST_TAG        
    - name: Build nesasm CE
      run: make -C ${{ env.NESASM_DIR }}/source EXEDIR=..
    - name: Build DupliFDS
      run: |
        mkdir -p duplifds
        make TILER=./${{ env.NESTILER_OUT }}/nestiler FDSPACKER=./${{ env.FDSPACKER_OUT }}/fdspacker NESASM=./${{ env.NESASM_OUT }}/nesasm OUTPUT_IMAGE=./duplifds/duplifds.fds INTERIM=1
        rm duplifds/*.nl
        cp LICENSE duplifds
        cp README.md duplifds
    - name: Archive
      run: zip -r9 duplifds.zip duplifds
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: duplifds
        path: ${{ env.OUTPUT_FILE }}
  upload-to-pages:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Generate index.html
      run: "(echo \"<html><head><title>DupliFDS</title></head><body>Updated: `date`<br/><br/><a href='duplifds/duplifds.zip'>duplifds.zip</a></body></html>\") > index.html"
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: '.'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
